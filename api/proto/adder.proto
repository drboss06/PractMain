syntax = "proto3";
option go_package = "pkg/api";
package api;
import "google/api/annotations.proto";


service Adder {
  rpc CreateTeam(CreateNewTeamRequest) returns (CreateTeamResponse) {
    option (google.api.http) = {
      post: "/api/team/create"
      body: "*"
    };
  }
  rpc ParseToken(accessTokenRequest) returns (accessTokenResponse) {}
  rpc SendMailToUser(userEmailRequest) returns (userEmailResponse) {
    option (google.api.http) = {
      post: "/api/team/send"
      body: "*"
    };
  }
  rpc AddUserToTeam(AddUserToTeamRequest) returns (AddUserToTeamResponse) {
    option (google.api.http) = {
      post: "/api/team/add"
      body: "*"
    };
  }
  rpc Delete(Id) returns (Id) {
    option (google.api.http) = {
      delete: "/api/team/{id}"
    };
  }
  rpc GetById(Id) returns (TeamRequest) {
    option (google.api.http) = {
      get: "/api/team/{id}"
    };
  }
  rpc GetByUserId(Id) returns (TeamsRequest) {
    option (google.api.http) = {
      get: "/api/team/user/{id}"
    };
  }
  rpc Update(UpdateTeamRequest) returns (TeamRequest) {
    option (google.api.http) = {
      put: "/api/team/update/{id}"
      body: "*"
    };
  }
}

message TeamRequest{
  int32 Id = 1;
  string Name = 2;
  string Description = 3;
}

message TeamsRequest{
  repeated TeamRequest Teams = 1;
}

message AddUserToTeamRequest {
  int32 UserId = 1;
  int32 TeamId = 2;
}

message AddUserToTeamResponse {
  int32 Id = 1;
}

message CreateTeamResponse {
  int32 Id = 1;
}

message CreateNewTeamRequest {
  string name = 1;
  string description = 2;
}

message UpdateTeamRequest {
  int32 id = 1;
  optional string name = 2;
  optional string description = 3;
}


message accessTokenRequest {
  string Token = 1;
}

message accessTokenResponse {
  int32 TokenId = 1;
}

message userEmailRequest {
  string Email = 1;
}

message userEmailResponse {
  string Ansver = 1;
}


message Id {
  int32 id = 1;
}